Cookie：客户端会话技术，将数据保存到客户端，以后每次请求都携带Cookie数据进行访问
    1·基本使用
        //发送Cookie
        //1·创建Cookie对象
        Cookie cookie = new Cookie("username", "zhangsan");
        //2·发送Cookie
        response.addCookie(cookie);


        //获取Cookie
        //3·获取客户端携带的所有Cookie,使用request对象
        Cookie[] cookies = request.getCookies();
        //4·遍历数组，获取每一个Cookie对象：
        for(Cookie cookie:cookies){
            String name = cookie.getName();
            if("username".equals(name)){
                String value = cookie.getValue();
                System.out.println(name+":"+value);
                break;
            }
        }
        //5·使用Cookie对象方法获取数据

    2·原理
        ·Cookie的实现是基于HTTP协议的
            ·响应头：set-cookie
            ·请求头：cookie
    3·使用细节
        ·Cookie存活时间
            ·默认情况下，Cookie存储在浏览器内存中，当浏览器关闭时，内存释放，则Cookie被销毁
            ·setMaxAge(int seconds):设置Cookie存活时间
                1·正数：将Cookie写入浏览器所在电脑的硬盘，持久化存储。到时间自动删除
                2·负数：默认值，Cookie在当前浏览器内存中，当浏览器关闭，则Cookie被销毁
                3·零：删除对应Cookie
        ·Cookie存储中文
            ·Cookie不能直接存中文
            ·如需要存储，则需要进行转码：URL编码

Session:服务端会话跟踪技术：将数据保存到服务端
    ·JavaEE提供HttpSession接口，来实现一次会话的多次请求间数据共享功能

    1·基本使用
        //存储到Session中
        //1·获取Session对象
        HttpSession session = request.getSession();
        //2·存储数据
        session.setAttribute("username","zangsan");

        //获取数据 Session中
        //1·获取Session对象
        HttpSession session = request.getSession();
        //2·获取数据
        Object username = session.getAttribute("username");
        System.out.println(username);

    2·原理
        ·Session是基于Cookie实现的
    3·使用细节
        ·Session钝化、活化：
            ·服务器重启后，Session中的数据是否还在？
            ·钝化：在服务器正常关闭后，Tomcat会自动将Session数据写入硬盘文件中
            ·活化：再次启动服务器后，从文件中加载数据到Session中
        ·Session销毁：
            ·默认情况下，无操作30分钟内自动销毁
            web.xml中配置
              <session-config>
                <session-timeout>30</session-timeout>
              </session-config>
            ·调用Session对象的invalidate()方法

·小结：
    ·Cookie和Session都是来完成一次会话内多次请求间数据共享的
    ·区别：
        ·存储位置：Cookie是将数据存储在客户端，Session将数据存储在服务端
        ·安全性：Cookie不安全，Session安全
        ·数据大小：Cookie最大3KB，Session无大小限制
        ·存储时间：Cookie可以长期存储，Session默认30分钟
        ·服务器性能：Cookie不占服务器资源，Session占用服务器资源

案例：登录注册案例
    需求说明：1·完成用户登录功能，如果用户勾选"记住用户"，则下次访问登陆页面
            自动填充用户名和密码
            2·完成注册功能，并且实现验证码功能
